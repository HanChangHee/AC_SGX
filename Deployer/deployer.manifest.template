loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "/deployer"
loader.log_level = "{{ log_level }}"

loader.uid = 65534
loader.gid = 65534

#loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:{{ install_dir }}/lib"
loader.env.LD_LIBRARY_PATH = "/lib:/lib_y:{{ arch_libdir }}"
loader.env.PATH = "/:/bin:/usr/bin"

fs.mounts = [
  { path = "/deployer", uri = "file:{{ install_dir }}/deployer" },

  { path = "/lib_y", uri = "file:{{ install_dir }}/lib/" },
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },

  { path = "{{ arch_libdir }}/libstdc++.so.6", uri = "file:{{ arch_libdir }}/libstdc++.so.6" },
  { path = "{{ arch_libdir }}/libstdc++.so.6.0.28", uri = "file:{{ arch_libdir }}/libstdc++.so.6.0.28" },
  { path = "{{ arch_libdir }}/libgcc_s.so.1", uri = "file:{{ arch_libdir }}/libgcc_s.so.1" },

  { path = "/tmp", type = "tmpfs" },
]

sgx.remote_attestation = "{{ ra_type }}"

sgx.debug = true
sgx.profile.enable = "main"
sgx.profile.with_stack = true
sys.enable_sigterm_injection = true

sgx.enable_stats=true

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ gramine.runtimedir() }}/",

  "file:{{ arch_libdir }}/",
  "file:{{ install_dir }}/deployer",
  "file:{{ install_dir }}/lib/",
  "file:ssl/ca.crt"
]
