# Hello World manifest file example

loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "/deployer"
loader.log_level = "{{ log_level }}"

#loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:{{ install_dir }}/lib"
loader.env.LD_LIBRARY_PATH = "/lib:/lib_y:{{ arch_libdir }}"
loader.env.PATH = "/:/bin:/usr/bin"

fs.mounts = [
  { path = "/lib_y", uri = "file:{{ install_dir }}/lib/" },
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "{{ arch_libdir }}/libstdc++.so.6", uri = "file:{{ arch_libdir }}/libstdc++.so.6" },
  { path = "{{ arch_libdir }}/libstdc++.so.6.0.28", uri = "file:{{ arch_libdir }}/libstdc++.so.6.0.28" },
  { path = "{{ arch_libdir }}/libgcc_s.so.1", uri = "file:{{ arch_libdir }}/libgcc_s.so.1" },
  { path = "/deployer", uri = "file:{{ install_dir }}/deployer" },
]

sgx.debug = true
sgx.edmm_enable = {{ 'true' if env.get('EDMM', '0') == '1' else 'false' }}
sgx.remote_attestation = "{{ ra_type }}"
sgx.ra_client_spid = "09876543210987654321098765432109"
sgx.ra_client_linkable = false

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ arch_libdir }}/",
  "file:{{ install_dir }}/deployer",
  "file:{{ install_dir }}/lib/",
  "file:{{ install_dir }}/src/",
  "file:{{ gramine.runtimedir() }}/",
  "file:ssl/ca.crt"
]
